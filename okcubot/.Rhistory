demo()
smooth
smooth()
smooth(1)
clear
clear()
cls()
install.packages("psych")
library(psych)
data(iqitems)
dim(iqitems)
View(iqitems)
colnames(iqitems) # data set names
fa(iqitems) # minres factor (factor analysis), 1 factor
iqitems.fa.1 = fa(iqitems) # minres factor (factor analysis), 1 factor
factor.plot(iqitems)
factor.plot(iqitems.fa.1)
attributes(iqitems.fa.1)
iqitems.fa.1$scores # the list of g-factor scores (estimated based on tests)
fa.plot(g.scores)
plot(g.scores)
plot(iqitems.fa.1$scores)
hist(iqitems.fa.1$scores)
answer <- read.delim("C:/Projects/okcubot/okcubot/answer.tsv")
View(answer)
question <- read.delim("C:/Projects/okcubot/okcubot/question.tsv", header=FALSE, dec=",")
View(question)
View(iqitems)
View(iqitems)
View(iqitems)
View(question)
m
clear
clear()
exit
stop
m = merge(answer, question, by.x="question", by.y="id")
m = merge(answer, question, by.x="id", by.y="question")
m = merge(answer, question, by.x="V5", by.y="question")
m = merge(answer, question, by.x="id", by.y="question")
m = merge(df.answer, df.question, by.x="id", by.y="question")
m = merge(answer, question, by.x="id", by.y="question")
user <- read.delim("C:/Projects/okcubot/okcubot/user.tsv")
View(user)
m = merge(user, answer, by.x="d_username", by.y="author")
m
m = merge(answer, user, by.y="d_username", by.x="author")
m
View(answer)
m
m = merge(answer, user, by.y="d_username", by.x="author")
m
View(m)
View(answer)
remove
remove(m)
remove(iqitems)
reload
refresh
answer <- read.delim("C:/Projects/okcubot/okcubot/answer.tsv")
View(answer)
m = merge(answer, user, by.y="d_username", by.x="author")
m
View(m)
question <- read.delim("C:/Projects/okcubot/okcubot/question.tsv", header=FALSE, dec=",")
View(question)
m = merge(question, answer, by.y="question", by.x="question_id")
m = merge(question, answer, by.y="question", by.x="question_id")
View(question)
questions <- read.delim("C:/Projects/okcubot/okcubot/question.tsv", header=FALSE, dec=",")
View(questions)
clear(question)
remove(question)
m = merge(questions, answer, by.y="question", by.x="question_id")
m = merge(x=questions, y=answer, by.y="question", by.x="question_id")
m = merge(y=questions, x=answer, by.y="question", by.x="question_id")
m = merge(y=questions, x=answer, by="", by.y="question", by.x="question_id")
m = merge(x=questions, y=answer, by.y="question", by.x="question_id")
m <- merge(questions, answer, by.y="question", by.x="question_id")
m <- merge(questions, answer, by.y = "question", by.x = "question_id")
m <- merge(questions, answer, by.x = "question_id", by.y = "question")
answer <- read.delim("C:/Projects/okcubot/okcubot/answer.tsv")
View(answer)
m <- merge(questions, answer, by = "question_id")
m <- merge(questions, answer, by = "question_id")
remove(iqitems.fa.1)
m <- merge(answer, user, by.x="author", by.y="d_username")
m
View(user)
View(questions)
remove(questions)
question <- read.delim("C:/Projects/okcubot/okcubot/question.tsv", dec=",")
View(question)
m <- merge(question, answer, by = "question_id")
m
remove(answer)
remove(m)
remove(question)
remove(user)
answer <- read.delim("C:/Projects/okcubot/okcubot/answer.tsv")
View(answer)
remove(answer)
answer <- read.delim("C:/Projects/okcubot/okcubot/sample data/answer.tsv")
View(answer)
question <- read.delim("C:/Projects/okcubot/okcubot/sample data/question.tsv")
View(question)
user <- read.delim("C:/Projects/okcubot/okcubot/sample data/user.tsv")
View(user)
remove(answer, question)
remove(user)
answer <- read.delim("C:/Projects/okcubot/okcubot/sample data/2/answer.tsv")
View(answer)
question <- read.delim("C:/Projects/okcubot/okcubot/sample data/2/question.tsv", dec=",")
View(question)
user <- read.delim("C:/Projects/okcubot/okcubot/sample data/2/user.tsv")
View(user)
m = merge(answer, question, by.x="question_id", by.y="id")
View(answer)
m = merge(answer, question, by.x="question", by.y="id")
m
m = merge(user, answer, by.x="d_username", by.y="author")
m
View(m)
remove(m, answer, question, user)
answer <- read.delim("C:/Projects/okcubot/okcubot/sample data/3/answer.tsv")
View(answer)
question <- read.delim("C:/Projects/okcubot/okcubot/sample data/3/question.tsv")
View(question)
user <- read.delim("C:/Projects/okcubot/okcubot/sample data/3/user.tsv", dec=",")
View(user)
m = merge(answer, user, by.x="author", by.y="d_username")
View(m)
View(m)
package
load
load(dplyr)
fitler()
filter()
users <- groupby(m, author)
users <- group_by(m, author)
library(dply)
clear(answer, m, question, user)
remove(answer, m, question, user)
answer <- read.delim("C:/Projects/okcubot/okcubot/answer.tsv")
View(answer)
question <- read.delim("C:/Projects/okcubot/okcubot/question.tsv", dec=",")
View(question)
user <- read.delim("C:/Projects/okcubot/okcubot/user.tsv")
View(user)
m <- merge(answer, question, by.x="question", by.y="id")
View(m)
n()
n
sum(m.question==1028)
sum(m[question]==1028)
sum(m['question']==1028)
sum(m['question']==1062)
count(m, vars="question")
library(plyr)
install.packages("plyr")
library(plyr)
count(m, vars="question")
freqs <- count(m, vars="question")
plot(freqs)
hist(freqs)
hist(freqs,x=question)
hist(freqs,x=freqs$question)
hist(freqs)
librar(ggplot2)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
geom_histogram
geom_histogram(freqs)
geom_histogram(data=freqs)
qplot(freq, data=freqs, geom="histogram")
qplot(question, data=m, geom="histogram")
qplot(question, data=m, geom="histogram") + scale_fill_gradient("Count", low="green", high="red")
m + qplot(question, data=m, geom="histogram") + scale_fill_gradient("Count", low="green", high="red")
m + geom_histogram(aes(fill = ..count..)) + scale_fill_gradient("Count", low="green", high="red")
m + geom_histogram(aes(fill = ..question..)) + scale_fill_gradient("Count", low="green", high="red")
qplot(question, data=m, geom="histogram")
qplot(question, data=m[order(count)], geom="histogram")
qplot(question, data=m[order(count),], geom="histogram")
qplot(question, data=m, geom="histogram")
m <- m[order(count),]
m <- m[order(count)]
m <- m[order(count(question))]
m <- order(m$Question, decreasing=true)
m <- order(m$Question, decreasing=TRUE)
m <- order(m$question, decreasing=TRUE)
qplot(question, data=m, geom="histogram")
m
m = merge(answer, question, by.x="question", by.y="id")
m <- m[order(m$question, decreasing=TRUE)]
View(m)
m <- m[order(m$question, decreasing=TRUE),]
qplot(question, data=m, geom="histogram")
m[sample(nrow(m), 50), ]
qplot(question, data=m, geom="histogram")
m <- m[sample(nrow(m), 50), ]
qplot(question, data=m, geom="histogram")
m <- m[sample(nrow(m), 50), ]
qplot(question, data=m, geom="histogram")
m <- m[sample(nrow(m), 150), ]
qplot(question, data=m, geom="histogram")
m <- m[sample(nrow(m), 100), ]
remove(iqitems.*)
remove(iqitems, iqitems.fa.1)
answer <- read.delim("C:/Projects/okcubot/okcubot/answer.tsv")
View(answer)
question <- read.delim("C:/Projects/okcubot/okcubot/question.tsv", dec=",")
View(question)
user <- read.delim("C:/Projects/okcubot/okcubot/user.tsv")
View(user)
m <- merge(answer, question, by.x="question", by.y="id")
View(m)
load
load("C:\Users\Oliver\merger.R")
ls
load("C:\\Users\\Oliver\\merger.R")
load("C:\\Users\\Oliver\\Desktop\\merger.R")
source('F:/Users/Oliver/Desktop/merger.R')
clear(iqitems, iqitems.fa.1)
remove(iqitems, iqitems.fa.1)
question <- read.delim("C:/Projects/okcubot/okcubot/question.tsv", dec=",")
View(question)
question <- read.delim("C:/Projects/okcubot/okcubot/sample data/3/question.tsv")
View(question)
question.1 <- read.delim("C:/Projects/okcubot/okcubot/question.tsv", dec=",")
View(question.1)
question.2 <- read.delim("C:/Projects/okcubot/okcubot/sample data/2/question.tsv", dec=",")
View(question.2)
q = merge.datasets(question, question.1)
q <- merge.datasets(question, question.1)
q <- merge.datasets(question, question.2)
q <- merge.datasets(q, question.1)
q
View(q)
View(question)
View(question.1)
cd
cd()
chdir()
setwd("C:/Projects/okcubot/okcubot")
question <- read.csv("user.tsv", sep="\t",stringsAsFactors=FALSE)
question.1 <- read.csv("sample data/3/user.tsv", sep="\t",stringsAsFactors=FALSE)
remove(question.2)
View(question)
q <- merge.datasets(question, question.1)
View(q)
user <- read.delim("F:/Users/Oliver/Downloads/user.tsv")
View(user)
length(unique(user$d_username)) == nrow(vocabulary)
length(unique(user$d_username)) == nrow(user)
